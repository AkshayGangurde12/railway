{
  "version": 3,
  "sources": ["../../convert-hex/convert-hex.js", "../../convert-string/convert-string.js", "../../sha256/lib/sha256.js"],
  "sourcesContent": ["!function(globals) {\n'use strict'\n\nvar convertHex = {\n  bytesToHex: function(bytes) {\n    /*if (typeof bytes.byteLength != 'undefined') {\n      var newBytes = []\n\n      if (typeof bytes.buffer != 'undefined')\n        bytes = new DataView(bytes.buffer)\n      else\n        bytes = new DataView(bytes)\n\n      for (var i = 0; i < bytes.byteLength; ++i) {\n        newBytes.push(bytes.getUint8(i))\n      }\n      bytes = newBytes\n    }*/\n    return arrBytesToHex(bytes)\n  },\n  hexToBytes: function(hex) {\n    if (hex.length % 2 === 1) throw new Error(\"hexToBytes can't have a string with an odd number of characters.\")\n    if (hex.indexOf('0x') === 0) hex = hex.slice(2)\n    return hex.match(/../g).map(function(x) { return parseInt(x,16) })\n  }\n}\n\n\n// PRIVATE\n\nfunction arrBytesToHex(bytes) {\n  return bytes.map(function(x) { return padLeft(x.toString(16),2) }).join('')\n}\n\nfunction padLeft(orig, len) {\n  if (orig.length > len) return orig\n  return Array(len - orig.length + 1).join('0') + orig\n}\n\n\nif (typeof module !== 'undefined' && module.exports) { //CommonJS\n  module.exports = convertHex\n} else {\n  globals.convertHex = convertHex\n}\n\n}(this);", "!function(globals) {\n'use strict'\n\nvar convertString = {\n  bytesToString: function(bytes) {\n    return bytes.map(function(x){ return String.fromCharCode(x) }).join('')\n  },\n  stringToBytes: function(str) {\n    return str.split('').map(function(x) { return x.charCodeAt(0) })\n  }\n}\n\n//http://hossa.in/2012/07/20/utf-8-in-javascript.html\nconvertString.UTF8 = {\n   bytesToString: function(bytes) {\n    return decodeURIComponent(escape(convertString.bytesToString(bytes)))\n  },\n  stringToBytes: function(str) {\n   return convertString.stringToBytes(unescape(encodeURIComponent(str)))\n  }\n}\n\nif (typeof module !== 'undefined' && module.exports) { //CommonJS\n  module.exports = convertString\n} else {\n  globals.convertString = convertString\n}\n\n}(this);", "!function(globals) {\n'use strict'\n\nvar _imports = {}\n\nif (typeof module !== 'undefined' && module.exports) { //CommonJS\n  _imports.bytesToHex = require('convert-hex').bytesToHex\n  _imports.convertString = require('convert-string')\n  module.exports = sha256\n} else {\n  _imports.bytesToHex = globals.convertHex.bytesToHex\n  _imports.convertString = globals.convertString\n  globals.sha256 = sha256\n}\n\n/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n\n// Initialization round constants tables\nvar K = []\n\n// Compute constants\n!function () {\n  function isPrime(n) {\n    var sqrtN = Math.sqrt(n);\n    for (var factor = 2; factor <= sqrtN; factor++) {\n      if (!(n % factor)) return false\n    }\n\n    return true\n  }\n\n  function getFractionalBits(n) {\n    return ((n - (n | 0)) * 0x100000000) | 0\n  }\n\n  var n = 2\n  var nPrime = 0\n  while (nPrime < 64) {\n    if (isPrime(n)) {\n      K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3))\n      nPrime++\n    }\n\n    n++\n  }\n}()\n\nvar bytesToWords = function (bytes) {\n  var words = []\n  for (var i = 0, b = 0; i < bytes.length; i++, b += 8) {\n    words[b >>> 5] |= bytes[i] << (24 - b % 32)\n  }\n  return words\n}\n\nvar wordsToBytes = function (words) {\n  var bytes = []\n  for (var b = 0; b < words.length * 32; b += 8) {\n    bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF)\n  }\n  return bytes\n}\n\n// Reusable object\nvar W = []\n\nvar processBlock = function (H, M, offset) {\n  // Working variables\n  var a = H[0], b = H[1], c = H[2], d = H[3]\n  var e = H[4], f = H[5], g = H[6], h = H[7]\n\n    // Computation\n  for (var i = 0; i < 64; i++) {\n    if (i < 16) {\n      W[i] = M[offset + i] | 0\n    } else {\n      var gamma0x = W[i - 15]\n      var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n                    ((gamma0x << 14) | (gamma0x >>> 18)) ^\n                    (gamma0x >>> 3)\n\n      var gamma1x = W[i - 2];\n      var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n                    ((gamma1x << 13) | (gamma1x >>> 19)) ^\n                    (gamma1x >>> 10)\n\n      W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n    }\n\n    var ch  = (e & f) ^ (~e & g);\n    var maj = (a & b) ^ (a & c) ^ (b & c);\n\n    var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n    var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n    var t1 = h + sigma1 + ch + K[i] + W[i];\n    var t2 = sigma0 + maj;\n\n    h = g;\n    g = f;\n    f = e;\n    e = (d + t1) | 0;\n    d = c;\n    c = b;\n    b = a;\n    a = (t1 + t2) | 0;\n  }\n\n  // Intermediate hash value\n  H[0] = (H[0] + a) | 0;\n  H[1] = (H[1] + b) | 0;\n  H[2] = (H[2] + c) | 0;\n  H[3] = (H[3] + d) | 0;\n  H[4] = (H[4] + e) | 0;\n  H[5] = (H[5] + f) | 0;\n  H[6] = (H[6] + g) | 0;\n  H[7] = (H[7] + h) | 0;\n}\n\nfunction sha256(message, options) {;\n  if (message.constructor === String) {\n    message = _imports.convertString.UTF8.stringToBytes(message);\n  }\n\n  var H =[ 0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\n           0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19 ];\n\n  var m = bytesToWords(message);\n  var l = message.length * 8;\n\n  m[l >> 5] |= 0x80 << (24 - l % 32);\n  m[((l + 64 >> 9) << 4) + 15] = l;\n\n  for (var i=0 ; i<m.length; i += 16) {\n    processBlock(H, m, i);\n  }\n\n  var digestbytes = wordsToBytes(H);\n  return options && options.asBytes ? digestbytes :\n         options && options.asString ? _imports.convertString.bytesToString(digestbytes) :\n         _imports.bytesToHex(digestbytes)\n}\n\nsha256.x2 = function(message, options) {\n  return sha256(sha256(message, { asBytes:true }), options)\n}\n\n}(this);\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,KAAC,SAAS,SAAS;AACnB;AAEA,UAAI,aAAa;AAAA,QACf,YAAY,SAAS,OAAO;AAc1B,iBAAO,cAAc,KAAK;AAAA,QAC5B;AAAA,QACA,YAAY,SAAS,KAAK;AACxB,cAAI,IAAI,SAAS,MAAM,EAAG,OAAM,IAAI,MAAM,kEAAkE;AAC5G,cAAI,IAAI,QAAQ,IAAI,MAAM,EAAG,OAAM,IAAI,MAAM,CAAC;AAC9C,iBAAO,IAAI,MAAM,KAAK,EAAE,IAAI,SAAS,GAAG;AAAE,mBAAO,SAAS,GAAE,EAAE;AAAA,UAAE,CAAC;AAAA,QACnE;AAAA,MACF;AAKA,eAAS,cAAc,OAAO;AAC5B,eAAO,MAAM,IAAI,SAAS,GAAG;AAAE,iBAAO,QAAQ,EAAE,SAAS,EAAE,GAAE,CAAC;AAAA,QAAE,CAAC,EAAE,KAAK,EAAE;AAAA,MAC5E;AAEA,eAAS,QAAQ,MAAM,KAAK;AAC1B,YAAI,KAAK,SAAS,IAAK,QAAO;AAC9B,eAAO,MAAM,MAAM,KAAK,SAAS,CAAC,EAAE,KAAK,GAAG,IAAI;AAAA,MAClD;AAGA,UAAI,OAAO,WAAW,eAAe,OAAO,SAAS;AACnD,eAAO,UAAU;AAAA,MACnB,OAAO;AACL,gBAAQ,aAAa;AAAA,MACvB;AAAA,IAEA,EAAE,OAAI;AAAA;AAAA;;;AC9CN;AAAA;AAAA,KAAC,SAAS,SAAS;AACnB;AAEA,UAAI,gBAAgB;AAAA,QAClB,eAAe,SAAS,OAAO;AAC7B,iBAAO,MAAM,IAAI,SAAS,GAAE;AAAE,mBAAO,OAAO,aAAa,CAAC;AAAA,UAAE,CAAC,EAAE,KAAK,EAAE;AAAA,QACxE;AAAA,QACA,eAAe,SAAS,KAAK;AAC3B,iBAAO,IAAI,MAAM,EAAE,EAAE,IAAI,SAAS,GAAG;AAAE,mBAAO,EAAE,WAAW,CAAC;AAAA,UAAE,CAAC;AAAA,QACjE;AAAA,MACF;AAGA,oBAAc,OAAO;AAAA,QAClB,eAAe,SAAS,OAAO;AAC9B,iBAAO,mBAAmB,OAAO,cAAc,cAAc,KAAK,CAAC,CAAC;AAAA,QACtE;AAAA,QACA,eAAe,SAAS,KAAK;AAC5B,iBAAO,cAAc,cAAc,SAAS,mBAAmB,GAAG,CAAC,CAAC;AAAA,QACrE;AAAA,MACF;AAEA,UAAI,OAAO,WAAW,eAAe,OAAO,SAAS;AACnD,eAAO,UAAU;AAAA,MACnB,OAAO;AACL,gBAAQ,gBAAgB;AAAA,MAC1B;AAAA,IAEA,EAAE,OAAI;AAAA;AAAA;;;AC5BN;AAAA;AAAA,KAAC,SAAS,SAAS;AACnB;AAEA,UAAI,WAAW,CAAC;AAEhB,UAAI,OAAO,WAAW,eAAe,OAAO,SAAS;AACnD,iBAAS,aAAa,sBAAuB;AAC7C,iBAAS,gBAAgB;AACzB,eAAO,UAAU;AAAA,MACnB,OAAO;AACL,iBAAS,aAAa,QAAQ,WAAW;AACzC,iBAAS,gBAAgB,QAAQ;AACjC,gBAAQ,SAAS;AAAA,MACnB;AAUA,UAAI,IAAI,CAAC;AAGT,OAAC,WAAY;AACX,iBAAS,QAAQA,IAAG;AAClB,cAAI,QAAQ,KAAK,KAAKA,EAAC;AACvB,mBAAS,SAAS,GAAG,UAAU,OAAO,UAAU;AAC9C,gBAAI,EAAEA,KAAI,QAAS,QAAO;AAAA,UAC5B;AAEA,iBAAO;AAAA,QACT;AAEA,iBAAS,kBAAkBA,IAAG;AAC5B,kBAASA,MAAKA,KAAI,MAAM,aAAe;AAAA,QACzC;AAEA,YAAI,IAAI;AACR,YAAI,SAAS;AACb,eAAO,SAAS,IAAI;AAClB,cAAI,QAAQ,CAAC,GAAG;AACd,cAAE,MAAM,IAAI,kBAAkB,KAAK,IAAI,GAAG,IAAI,CAAC,CAAC;AAChD;AAAA,UACF;AAEA;AAAA,QACF;AAAA,MACF,EAAE;AAEF,UAAI,eAAe,SAAU,OAAO;AAClC,YAAI,QAAQ,CAAC;AACb,iBAAS,IAAI,GAAG,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,KAAK,GAAG;AACpD,gBAAM,MAAM,CAAC,KAAK,MAAM,CAAC,KAAM,KAAK,IAAI;AAAA,QAC1C;AACA,eAAO;AAAA,MACT;AAEA,UAAI,eAAe,SAAU,OAAO;AAClC,YAAI,QAAQ,CAAC;AACb,iBAAS,IAAI,GAAG,IAAI,MAAM,SAAS,IAAI,KAAK,GAAG;AAC7C,gBAAM,KAAM,MAAM,MAAM,CAAC,MAAO,KAAK,IAAI,KAAO,GAAI;AAAA,QACtD;AACA,eAAO;AAAA,MACT;AAGA,UAAI,IAAI,CAAC;AAET,UAAI,eAAe,SAAU,GAAG,GAAG,QAAQ;AAEzC,YAAI,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC;AACzC,YAAI,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC;AAGzC,iBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,cAAI,IAAI,IAAI;AACV,cAAE,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI;AAAA,UACzB,OAAO;AACL,gBAAI,UAAU,EAAE,IAAI,EAAE;AACtB,gBAAI,UAAY,WAAW,KAAO,YAAY,MAC9B,WAAW,KAAO,YAAY,MAC/B,YAAY;AAE3B,gBAAI,UAAU,EAAE,IAAI,CAAC;AACrB,gBAAI,UAAY,WAAW,KAAO,YAAY,OAC9B,WAAW,KAAO,YAAY,MAC/B,YAAY;AAE3B,cAAE,CAAC,IAAI,SAAS,EAAE,IAAI,CAAC,IAAI,SAAS,EAAE,IAAI,EAAE;AAAA,UAC9C;AAEA,cAAI,KAAO,IAAI,IAAM,CAAC,IAAI;AAC1B,cAAI,MAAO,IAAI,IAAM,IAAI,IAAM,IAAI;AAEnC,cAAI,UAAW,KAAK,KAAO,MAAM,MAAQ,KAAK,KAAO,MAAM,OAAS,KAAK,KAAO,MAAM;AACtF,cAAI,UAAW,KAAK,KAAO,MAAM,MAAQ,KAAK,KAAO,MAAM,OAAS,KAAK,IAAO,MAAM;AAEtF,cAAI,KAAK,IAAI,SAAS,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC;AACrC,cAAI,KAAK,SAAS;AAElB,cAAI;AACJ,cAAI;AACJ,cAAI;AACJ,cAAK,IAAI,KAAM;AACf,cAAI;AACJ,cAAI;AACJ,cAAI;AACJ,cAAK,KAAK,KAAM;AAAA,QAClB;AAGA,UAAE,CAAC,IAAK,EAAE,CAAC,IAAI,IAAK;AACpB,UAAE,CAAC,IAAK,EAAE,CAAC,IAAI,IAAK;AACpB,UAAE,CAAC,IAAK,EAAE,CAAC,IAAI,IAAK;AACpB,UAAE,CAAC,IAAK,EAAE,CAAC,IAAI,IAAK;AACpB,UAAE,CAAC,IAAK,EAAE,CAAC,IAAI,IAAK;AACpB,UAAE,CAAC,IAAK,EAAE,CAAC,IAAI,IAAK;AACpB,UAAE,CAAC,IAAK,EAAE,CAAC,IAAI,IAAK;AACpB,UAAE,CAAC,IAAK,EAAE,CAAC,IAAI,IAAK;AAAA,MACtB;AAEA,eAAS,OAAO,SAAS,SAAS;AAAC;AACjC,YAAI,QAAQ,gBAAgB,QAAQ;AAClC,oBAAU,SAAS,cAAc,KAAK,cAAc,OAAO;AAAA,QAC7D;AAEA,YAAI,IAAG;AAAA,UAAE;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,QAAW;AAExD,YAAI,IAAI,aAAa,OAAO;AAC5B,YAAI,IAAI,QAAQ,SAAS;AAEzB,UAAE,KAAK,CAAC,KAAK,OAAS,KAAK,IAAI;AAC/B,WAAI,IAAI,MAAM,KAAM,KAAK,EAAE,IAAI;AAE/B,iBAAS,IAAE,GAAI,IAAE,EAAE,QAAQ,KAAK,IAAI;AAClC,uBAAa,GAAG,GAAG,CAAC;AAAA,QACtB;AAEA,YAAI,cAAc,aAAa,CAAC;AAChC,eAAO,WAAW,QAAQ,UAAU,cAC7B,WAAW,QAAQ,WAAW,SAAS,cAAc,cAAc,WAAW,IAC9E,SAAS,WAAW,WAAW;AAAA,MACxC;AAEA,aAAO,KAAK,SAAS,SAAS,SAAS;AACrC,eAAO,OAAO,OAAO,SAAS,EAAE,SAAQ,KAAK,CAAC,GAAG,OAAO;AAAA,MAC1D;AAAA,IAEA,EAAE,OAAI;AAAA;AAAA;",
  "names": ["n"]
}
